Génération du certificat racine CA :

# Générer la clé privée pour le certificat du CA
openssl ecparam -out CA/private/ecc.ca.key.pem -name prime256v1 -genkey

# Demande de signature de certificat CA
openssl req -config <(printf "[req]\ndistinguished_name=dn\n[dn]\n[ext]\nbasicConstraints=CA:FALSE") -new -subj "/C=FR/L=Limoges/O=CRYPTIS/OU=SecuTIC/CN=serveur" -reqexts ext -sha256 -key CA/private/ecc.ca.key.pem -text -out CA/requests/ecc.csr.pem

# Certificat du CA
openssl req -key CA/private/ecc.ca.key.pem -new -x509 -out CA/certs/ecc.ca.cert.pem -days 3650 -config CA/root-ca.cnf

|---------------------------------------------------------------------------------|

Génération du certificat serveur :

# Demande de signature de certificat serveur (en utilisant la clé privée du CA)
openssl x509 -req -days 3650 -CA ecc.ca.cert.pem -CAkey CA/private/ecc.ca.key.pem -CAcreateserial -extfile <(printf "basicConstraints=critical,CA:FALSE") -in CA/requests/ecc.csr.pem -text -out CA/newcerts/ecc.serveur.pem

|---------------------------------------------------------------------------------|

Génération de la clé privée pour le certificat du serveur (à utiliser lors du fork pour le serveur frontal):

# Générer la clé privée pour le certificat du serveur
openssl ecparam -out CA/private/ecc.serveur.key.pem -name prime256v1 -genkey

# Création du fichier bundle_serveur.pem
cat CA/private/ecc.serveur.key.pem CA/newcerts/ecc.serveur.pem > CA/servBundle/bundle_serveur.pem

